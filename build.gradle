plugins {
    id "com.jfrog.bintray" version "1.4"
}

repositories {
    jcenter()
    mavenLocal()
}

group 'me.codeboy.common'
version '1.1.1'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

dependencies {
    //War's providedCompile scope will override jar's compile scope.
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.hibernate:hibernate-core:4.3.7.Final'
    compile 'org.apache.struts:struts2-core:2.3.20'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'me.codeboy.common:base:1.2.0'
}

def siteUrl = 'https://github.com/androiddevelop/WebFramework'
def issueUrl = 'https://github.com/androiddevelop/WebFramework/issues'
def gitUrl = 'https://github.com/androiddevelop/WebFramework.git'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                name 'base'
                description 'Java Web Framework'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'codeboy'
                        name 'yuedong'
                        email 'androiddevelop@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}


task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'WebFramework'
        desc = 'Web开发框架'
        issueTrackerUrl = issueUrl
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['java', 'web', 'hibernate', 'struts2']
        publicDownloadNumbers = true
        publish = true
        version {
            name = "1.1.1"
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
            mavenCentralSync {
                sync = true
                user = properties.getProperty("bintray.oss.user")
                password = properties.getProperty("bintray.oss.password")
                close = '1'
            }
        }
    }
}